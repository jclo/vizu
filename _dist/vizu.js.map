{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","src/component.js","src/vizu.js"],"names":[],"mappings":"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","file":"vizu.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Component from './src/component';\nimport Vizu from './src/vizu';\n\nexport default { Component, Vizu };\n","/* global document */\n/* eslint indent: [\"error\", 2, { \"VariableDeclarator\": { \"var\": 1, \"let\": 1, \"const\": 2 } }] */\n/* eslint one-var: 0 */\n// -- Vendor modules\n\n// -- Local modules\nimport Vizu from './vizu';\n\n// -- Global constants (in the scope of this module)\n\n// -- Global variables (in the scope of this module)\n\n\n// -- Private Functions --------------------------------------------------------\n\n\n// -- Public Methods -----------------------------------------------------------\n\n/**\n* This class defines the web component.\n*\n* @namespace vizu\n*/\nclass Component {\n/**\n * Creates an unique ID for this component.\n *\n * @constructor ()\n * @public\n * @param {}          -,\n */\n  constructor() {\n    // Create an unique id for this component:\n    this.id = `i${Math.random().toString(36).substr(2, 7)}`;\n    this.cList = null;\n    this.components = null;\n    this.props = {};\n    this.props.options = {};\n  }\n\n  /**\n   * Initialises the variables when the component is rendered.\n   *\n   * @method ()\n   * @public\n   * @param {}        -,\n   * @returns {}      -,\n   * @since 0.0.0\n   */\n  getInitialState() {\n    // To avoid eslint error!\n    this.props = {};\n    this.props.options = {};\n  }\n\n  /**\n   * Returns the the first element that matches the specified CSS selector(s).\n   *\n   * @method (arg1)\n   * @public\n   * @param {String}    the CSS selector(s),\n   * @returns {Object}  returns the first element that matches a specified\n   *                    CSS selector(s),\n   * @since 0.0.0\n   */\n  $(el) {\n    const that = this;\n\n    /**\n     * Returns the the first element that matches the specified CSS selector(s).\n     *\n     * @method (arg1)\n     * @public\n     * @param {String}    the CSS selector(s),\n     * @returns {Object}  returns the first element that matches a specified\n     *                    CSS selector(s),\n     * @since 0.0.0\n     */\n    const getElement = function() {\n      if (el) {\n        // Returns the the first element that matches the selector(s):\n        return Vizu.vdom\n          ? Vizu.vdom.window.document.querySelector(`#${that.id}`).querySelector(el)\n          /* istanbul ignore next */\n          : document.querySelector(`#${that.id}`).querySelector(el);\n      }\n      // Return the entire 'web component':\n      return Vizu.vdom\n        ? Vizu.vdom.window.document.querySelector(`#${that.id}`)\n        /* istanbul ignore next */\n        : document.querySelector(`#${that.id}`);\n    };\n\n    /**\n     * Returns the DOMTokenList collection of the class attributes of the element.\n     *\n     * @method ()\n     * @public\n     * @param {}          -,\n     * @returns {Object}  returns the DOMTokenList of the element,\n     * @since 0.0.0\n     */\n    const getClassList = function() {\n      return getElement().classList;\n    };\n\n    /**\n     * Adds a class name to the element.\n     *\n     * @method (arg1)\n     * @public\n     * @param {String}    the class name to add,\n     * @returns {}        -,\n     * @since 0.0.0\n     */\n    const addClass = function(className) {\n      getElement().classList.add(className);\n    };\n\n    /**\n     * Removes a class name to the element.\n     *\n     * @method (arg1)\n     * @public\n     * @param {String}    the class name to remove,\n     * @returns {}        -,\n     * @since 0.0.0\n     */\n    const removeClass = function(className) {\n      getElement().classList.remove(className);\n    };\n\n    /**\n     * Toggles a class name for the element.\n     *\n     * @method (arg1)\n     * @public\n     * @param {String}    the class name to add/remove,\n     * @returns {}        -,\n     * @since 0.0.0\n     */\n    const toggleClass = function(className) {\n      getElement().classList.toggle(className);\n    };\n\n    /**\n     * Gets/Sets the HTML contents of the element,\n     *\n     * @method (arg1)\n     * @public\n     * @param {String}    the html contents to add,\n     * @returns {}        -,\n     * @since 0.0.0\n     */\n    const html = function(htmlstring) {\n      if (htmlstring) {\n        getElement().innerHTML = htmlstring;\n      }\n      return getElement().innerHTML;\n    };\n\n    /**\n     * Gets/Sets the text contents of the element,\n     *\n     * @method (arg1)\n     * @public\n     * @param {String}    the text contents to add,\n     * @returns {}        -,\n     * @since 0.0.0\n     */\n    const text = function(texte) {\n      if (texte) {\n        getElement().textContent = texte;\n      }\n      return getElement().textContent;\n    };\n\n    /**\n     * Gets/Sets the style attribute of the element,\n     *\n     * @method (arg1, arg2)\n     * @public\n     * @param {String}    the style attribute,\n     * @param {String}    the style attribute value,\n     * @returns {String}  undefined or the style attribute value,\n     * @since 0.0.3\n     */\n    const css = function(styleAttr, value) {\n      const arr = typeof styleAttr === 'string' ? styleAttr.split('-') : [];\n      let attr = '';\n\n      // Convert style attribute name with '-' (ex.: 'font-size' to 'fontSize'):\n      for (let i = 0; i < arr.length; i++) {\n        if (i === 0) {\n          attr += arr[i];\n        } else {\n          attr += arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n        }\n      }\n\n      if (!value) {\n        // Get attribute:\n        return getElement().style[attr];\n      }\n\n      // Set attribute:\n      getElement().style[attr] = value;\n      return undefined;\n    };\n\n\n    return {\n      id: getElement() ? getElement().id : null,\n      getElement,\n      getClassList,\n      addClass,\n      removeClass,\n      toggleClass,\n      html,\n      text,\n      css,\n    };\n  }\n\n  /**\n   * Returns the defined web component.\n   *\n   * @method ()\n   * @public\n   * @param {}          -,\n   * @returns {String}  returns the web component,\n   * @since 0.0.0\n   */\n  /* istanbul ignore next */\n  render() {\n    return `<div>${this.id}</div>`;\n  }\n\n  /**\n   * Processes the web component to convert child(s) to plain HTML.\n   *\n   * @method ()\n   * @public\n   * @param {}          -,\n   * @returns {String}  returns the web component,\n   * @since 0.0.0\n   */\n  get rendered() {\n    let t;\n    // Initializes:\n    this.getInitialState();\n    // Add an unique ID to this component:\n    // let t = this.render().replace(/<div>/, `<div id=\"${this.id}\">`);\n    const co = this.render();\n    if (co.match(/^\\s*<div/)) {\n      t = co.replace(/^\\s*<div/, `<div id= \"${this.id}\"`);\n    } else if (co.match(/^\\s*<header/)) {\n      t = co.replace(/^\\s*<header/, `<header id= \"${this.id}\"`);\n    } else if (co.match(/^\\s*<footer/)) {\n      t = co.replace(/^\\s*<footer/, `<footer id= \"${this.id}\"`);\n    } else {\n      t = co;\n    }\n\n    if (this.cList) {\n      // This component includes components, render them:\n      this.components = {};\n      const keys = Object.keys(this.cList);\n      for (let i = 0; i < keys.length; i++) {\n        const c = new this.cList[keys[i]]();\n        t = t.replace(keys[i], c.rendered);\n        this.components[keys[i].replace(/[^a-zA-z0-9]/g, '')] = c;\n      }\n    }\n    // Return the rendered web component:\n    return t;\n  }\n}\n\nexport default Component;\n","/* global document */\n/* eslint indent: [\"error\", 2, { \"VariableDeclarator\": { \"var\": 1, \"let\": 1, \"const\": 2 } }] */\n/* eslint one-var: 0, no-param-reassign: 0, max-len: [1, 130],\n  no-unused-expressions: [\"error\", { \"allowTernary\": true }], no-underscore-dangle: 0,\n  no-proto: 1, prefer-rest-params: 1 */\n\n// -- Vendor modules\n\n// -- Local modules\nimport Component from './component';\n\n// -- Global constants (in the scope of this module)\n\n// -- Global variables (in the scope of this module)\n\n\n// -- Private Functions --------------------------------------------------------\n\n/**\n * Returns the path of the matching Web Component.\n *\n * @function ()\n * @private\n * @param {Object}    the view object,\n * @param {String}    the tag defining a Web Component\n * @returns {Object}  the path of the matching Web Component,\n */\nconst explore = function(view, tag) {\n  if (view.cList && view.cList[tag]) {\n    return view;\n  }\n  const keys = Object.keys(view);\n  for (let i = 0; i < keys.length; i++) {\n    if (view[keys[i]].cList) {\n      if (view[keys[i]].cList[tag]) {\n        return view[keys[i]];\n      }\n      if (view[keys[i]].components) {\n        return explore(view[keys[i]].components, tag);\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Code reused from Babel\n */\nconst _createClass = (function() {\n  function defineProperties(target, props) {\n    for (let i = 0; i < props.length; i++) {\n      const descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true;\n      if ('value' in descriptor) {\n        descriptor.writable = true;\n      }\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function(Constructor, protoProps, staticProps) {\n    if (protoProps) {\n      defineProperties(Constructor.prototype, protoProps);\n    }\n    if (staticProps) {\n      /* istanbul ignore next */\n      defineProperties(Constructor, staticProps);\n    }\n    return Constructor;\n  };\n}());\n\n/**\n * Code reused from Babel\n */\nconst _possibleConstructorReturn = function(self, call) {\n  if (!self) {\n    /* istanbul ignore next */\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === 'object' || typeof call === 'function') ? call : self;\n};\n\n/**\n * Code reused from Babel\n */\nconst _inherits = function(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    /* istanbul ignore next */\n    throw new TypeError(`Super expression must either be null or a function, not ${typeof superClass}`);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true,\n    } });\n\n  if (superClass) {\n    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n};\n\n/**\n * Code reused from Babel\n */\nconst _classCallCheck = function(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    /* istanbul ignore next */\n    throw new TypeError('Cannot call a class as a function');\n  }\n};\n\n/**\n * Code reused from Babel\n */\nconst _subClass = function(SuperClass, m) {\n  function SubClass() {\n    _classCallCheck(this, SubClass);\n    return _possibleConstructorReturn(this, (SubClass.__proto__ || Object.getPrototypeOf(SubClass)).apply(this, arguments));\n  }\n  _inherits(SubClass, SuperClass);\n\n  _createClass(SubClass, m);\n\n  return SubClass;\n};\n\n// -- Public Methods -----------------------------------------------------------\n\n/**\n* This library renders the View in the DOM.\n*\n* @namespace Vizu\n*/\nconst Vizu = {\n\n  /**\n   * Returns the version of this library.\n   *\n   * @method ()\n   * @public\n   * @param {}          -,\n   * @returns {String}  returns the version of this library,\n   */\n  version() {\n    return '{{lib:version}}';\n  },\n\n  /**\n   * Renders the View in the DOM.\n   *\n   * @method (arg1, arg2, arg3)\n   * @public\n   * @param {String}    the aggregated web components,\n   * @param {Object}    the list of web components and their reference,\n   * @param {Object}    the DOM element where the view (the aggregate of web components) is inserted,\n   * @returns {Object}  returns the view object,\n   * @since 0.0.0\n   */\n  render(template, cList, el) {\n    const keys = Object.prototype.toString.call(cList) === '[object Object]' ? Object.keys(cList) : []\n        , view = {}\n        ;\n    let t;\n\n    // Return null if the template is not a string:\n    if (typeof template !== 'string') {\n      return null;\n    }\n\n    // If no components, render the template as is:\n    if (!cList) {\n      if (el) {\n        el.innerHTML = template;\n      } else {\n        Vizu.vdom\n          ? (Vizu.vdom.window.document.body.innerHTML += template)\n          : (document.body.innerHTML += template);\n      }\n      return null;\n    }\n\n    // This view includes components, render them:\n    t = template;\n    for (let i = 0; i < keys.length; i++) {\n      const c = new cList[keys[i]]();\n      t = t.replace(keys[i], c.rendered);\n      view[keys[i].replace(/[^a-zA-z0-9]/g, '')] = c;\n    }\n    // Attach cList:\n    view.cList = keys.length > 0 ? cList : null;\n\n    // Fill the DOM:\n    if (el) {\n      el.innerHTML = t;\n    } else {\n      el = Vizu.vdom ? Vizu.vdom.window.document.body : document.body;\n      el.innerHTML = +t;\n    }\n    // Attach parent element:\n    view.el = el;\n\n    // Return the rendered object (with a reference to all the web components):\n    return view;\n  },\n\n  /**\n   * Replaces a component with another component having the same tag.\n   *\n   * @method (arg1, arg2)\n   * @public\n   * @param {Object}    the view object,\n   * @param {Object}    the new component ({ '<Aaa />': 'new class' }),\n   * @returns {}        -,\n   * @since 0.0.0\n   */\n  replace(view, component) {\n    let id\n      , type\n      ;\n\n    // Check that view is an object with, at least, the properties cList and el:\n    if (Object.prototype.toString.call(view) !== '[object Object]' || !view.cList || !view.el) {\n      return;\n    }\n\n    // Check that component is an object:\n    if (Object.prototype.toString.call(component) !== '[object Object]') {\n      return;\n    }\n\n    // Process the new component:\n    const newctag = Object.keys(component)[0];\n    const newcname = newctag.replace(/[^a-zA-z0-9]/g, '');\n    const newc = new component[newctag]();\n\n    // Check if a component with the same name already exists in the view:\n    const path = explore(view, newctag);\n    if (path) {\n      // Get its id and remove it:\n      if (path[newcname]) {\n        id = path[newcname].id;\n        path[newcname] = null;\n        type = 1;\n      } else {\n        id = path.components[newcname].id;\n        path.components[newcname] = null;\n        type = 2;\n      }\n      path.cList[newctag] = null;\n\n      // Get its id and clear it:\n      const wrapper = Vizu.vdom\n        ? Vizu.vdom.window.document.createElement('div')\n        : document.createElement('div');\n\n      const oldNode = Vizu.vdom\n        ? Vizu.vdom.window.document.getElementById(id)\n        : document.getElementById(id);\n\n      wrapper.innerHTML = newc.rendered;\n      oldNode.parentNode.replaceChild(wrapper.firstChild, oldNode);\n\n      // Attach the new node to view:\n      if (type === 1) {\n        path[newcname] = newc;\n      } else {\n        path.components[newcname] = newc;\n      }\n      path.cList[newctag] = component[newctag];\n    }\n  },\n\n  /**\n   * Extends the class Component.\n   *\n   * @method (arg1)\n   * @public\n   * @param {Object}    the methods to add to Component,\n   * @returns {Object}  returns the extended class component,\n   * @since 0.0.3\n   */\n  createClass(methods) {\n    // Check that methods is an object:\n    if (Object.prototype.toString.call(methods) !== '[object Object]') {\n      return null;\n    }\n\n    // Extract keys:\n    const keys = Object.keys(methods);\n    const o = [];\n    for (let i = 0; i < keys.length; i++) {\n      o.push({\n        key: keys[i],\n        value: methods[keys[i]],\n      });\n    }\n\n    return _subClass(Component, o);\n  },\n};\n\nexport default Vizu;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}